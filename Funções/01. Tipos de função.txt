Tipo de função - 

Estrutura -- 

A estrutura base:

	function nome(parametros) {
		//instruções
		return; //valor de retorno
	}

Variáveis criadas dentro de uma função apenas podem ser utilizadas dentro dela.

Quanto invocamos o "return", a função para de ser executada.

Função anônima --

Estrutura base:

	const soma = function (a, b) {
		return a + b;
	}

	soma(1, 2) // 3
	soma(5, 4) // 9

Uma variável pode armazenar uma função.

Função autoinvocável --

Estrutura:

	(
		function() {
			let name = "Digital Inno"
			return name;
		}
	)();

	// Digital Inno

Uma função anônima entre parênteses, seguida por outro par de parênteses, que representa sua chamada.

	(
		function(a, b) {
			return a + b;
		}
	)(1, 2);

	//3

_________________________________________

	const soma3 = (
		function() {
			return a + b;
		}
	)(1, 2);
	
	console.log(soma3) // 3 

A função autoinvocável também pode ser utilizada com parâmetros ou armazenada em uma variável.

Callbacks --

Callback é uma função passada como argumento para outra. Utilizando o callback, pode-se ter maior controle da ordem de chamadas.

const calc = function(operacao, num1, num2){
	return operacao(num1, num2);
}

const soma = function(num1, num2){
	return num1 + num2;
}

const sub = function(num1, num2){
	return num1 - num2;
}

const resultSoma = calc(soma, 1, 2);
const resultSub = calc(sub, 1, 2);

console.log(resultSub); // -1
console.log(resultSoma); // 3

